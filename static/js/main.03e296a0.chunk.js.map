{"version":3,"sources":["components/Tasks/Tasks.js","components/Type/Type.js","components/Buttons/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Tasks","props","changeQuestionForWrong","setState","task","state","changeQuestionForCorrect","totalScores","restartQuiz","shuffleFourAnswer","tasks","num","Math","floor","random","className","onClick","correct_answer","incorrect_answers","shuffleTwoAnswer","this","length","question","getQuiz","React","Component","Type","Buttons","handleChange","event","target","name","value","fetch","trivia_amount","trivia_category","trivia_difficulty","then","response","json","data","results","triger","categories","onChange","App","push","trivia_categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAuIeA,E,kDAlId,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAQPC,uBAAyB,WACxB,EAAKC,SAAS,CACbC,KAAM,EAAKC,MAAMD,KAAO,KAXP,EAenBE,yBAA2B,WAC1B,EAAKH,SAAS,CACbC,KAAM,EAAKC,MAAMD,KAAO,EACxBG,YAAa,EAAKF,MAAME,YAAc,KAlBrB,EAsBnBC,YAAc,WACb,EAAKL,SAAS,CAACC,KAAM,EAAGG,YAAa,KAvBnB,EA0BnBE,kBAAoB,WAAO,IAAD,EACD,EAAKJ,MAArBK,EADiB,EACjBA,MAAON,EADU,EACVA,KACXO,EAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC1B,OAAW,GAAPH,EAEF,sBAAKI,UAAU,qBAAf,UACC,wBAAQC,QAAS,EAAKV,yBAAtB,SAAiDI,EAAMN,GAAMa,iBAC7D,wBAAQD,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,QAG/D,GAAPP,EAER,sBAAKI,UAAU,qBAAf,UACC,wBAAQC,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKV,yBAAtB,SAAiDI,EAAMN,GAAMa,iBAC7D,wBAAQD,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,QAG/D,GAAPP,EAER,sBAAKI,UAAU,qBAAf,UACC,wBAAQC,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKV,yBAAtB,SAAiDI,EAAMN,GAAMa,iBAC7D,wBAAQD,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,QAG/D,GAAPP,EAER,sBAAKI,UAAU,qBAAf,UACC,wBAAQC,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKV,yBAAtB,SAAiDI,EAAMN,GAAMa,oBAM9D,8BAAK,qFApEW,EAyEnBE,iBAAmB,WAAO,IAAD,EACA,EAAKd,MAArBK,EADgB,EAChBA,MAAON,EADS,EACTA,KACXO,EAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC1B,OAAU,GAAPH,EAED,sBAAKI,UAAU,qBAAf,UACC,wBAAQC,QAAS,EAAKV,yBAAtB,SAAiDI,EAAMN,GAAMa,iBAC7D,wBAAQD,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,QAG/D,GAAPP,EAER,sBAAKI,UAAU,qBAAf,UACC,wBAAQC,QAAS,EAAKd,uBAAtB,SAA+CQ,EAAMN,GAAMc,kBAAkB,KAC7E,wBAAQF,QAAS,EAAKV,yBAAtB,SAAiDI,EAAMN,GAAMa,oBAK9D,8BAAK,oFA1FP,EAAKZ,MAAQ,CACZK,MAAOT,EAAMS,MACbN,KAAM,EACNG,YAAa,GALI,E,0CAiGnB,WAAU,IAAD,EACgBa,KAAKf,MAArBK,EADA,EACAA,MAAON,EADP,EACOA,KACf,OACA,gCACC,oBAAIW,UAAU,KAAd,sCAECK,KAAKf,MAAMD,KAAOgB,KAAKnB,MAAMS,MAAMW,OAEnC,sBAAKN,UAAU,yBAAf,UACC,qBAAKA,UAAU,WAAf,SAA0B,oBAAIA,UAAU,KAAd,SAAoBL,EAAMN,GAAMkB,aAEjB,GAAxCZ,EAAMN,GAAMc,kBAAkBG,OAE9BD,KAAKD,mBAELC,KAAKX,uBAKP,sBAAKM,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,mBAAuBK,KAAKf,MAAME,eAClC,wBAAQS,QAASI,KAAKnB,MAAMsB,QAASR,UAAU,SAA/C,sBACA,wBAAQC,QAASI,KAAKZ,YAAaO,UAAU,SAA7C,0C,GAzHeS,IAAMC,WCSXC,E,4JAVd,WACC,OACC,sBAAKX,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,mDACA,mF,GALeS,IAAMC,WCwFVE,E,kDApFd,WAAY1B,GAAQ,IAAD,8BAClB,cAAMA,IAWP2B,aAAe,SAACC,GAAW,IAAD,EACGA,EAAMC,OAArBC,EADY,EACZA,KAAMC,EADM,EACNA,MACb,EAAK7B,SAAL,eACK4B,EAAOC,KAfA,EAmBhBT,QAAU,WACTU,MAAM,sCAAD,OAAuC,EAAK5B,MAAM6B,cAAlD,qBAA4E,EAAK7B,MAAM8B,gBAAvF,uBAAqH,EAAK9B,MAAM+B,oBACpIC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,EAAKrC,SAAS,CACbO,MAAO8B,EAAKC,QACNC,QAAS,EAAKrC,MAAMqC,aAvB/B,EAAKrC,MAAQ,CACZsC,WAAY1C,EAAM0C,WAClBR,gBAAiB,GACjBC,kBAAmB,GACnBF,cAAe,GACfxB,MAAO,GACPgC,QAAQ,GARS,E,0CA+BnB,WACC,OACCtB,KAAKf,MAAMqC,OAIX,cAAC,EAAD,CAAOhC,MAAOU,KAAKf,MAAMK,MAAOa,QAASH,KAAKG,UAI9C,gCACC,cAAC,EAAD,IACA,sBAAKR,UAAU,gBAAf,UACC,yBAAQiB,MAAOZ,KAAKf,MAAM8B,gBAAiBJ,KAAK,kBAAkBhB,UAAU,SAAS6B,SAAUxB,KAAKQ,aAApG,cACC,wBAAQI,MAAM,MAAd,6BACA,wBAAQA,MAAM,IAAd,+BAA4C,wBAAQA,MAAM,KAAd,kCAC5C,wBAAQA,MAAM,KAAd,iCAA+C,wBAAQA,MAAM,KAAd,kCAC/C,wBAAQA,MAAM,KAAd,gDACA,wBAAQA,MAAM,KAAd,uCACA,wBAAQA,MAAM,KAAd,wCACA,wBAAQA,MAAM,KAAd,wCACA,wBAAQA,MAAM,KAAd,8BACA,wBAAQA,MAAM,KAAd,gCACA,wBAAQA,MAAM,KAAd,kCACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,yBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,mCACA,wBAAQA,MAAM,KAAd,8BACA,wBAAQA,MAAM,KAAd,mDACA,wBAAQA,MAAM,KAAd,oDAED,yBAAQA,MAAOZ,KAAKf,MAAM+B,kBAAmBL,KAAK,oBAAoBhB,UAAU,SAAS6B,SAAUxB,KAAKQ,aAAxG,cACC,wBAAQI,MAAM,MAAd,+BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,qBAED,wBAAQjB,UAAU,SAASC,QAASI,KAAKG,QAAzC,6B,GA5EiBC,IAAMC,WCyBboB,E,kDAxBb,aAAe,IAAD,8BACZ,gBACKxC,MAAQ,CACXsC,WAAY,IAHF,E,qDAQd,WAAoB,IAAD,OACjBV,MAAM,wCACLI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKnC,MAAMsC,WAAWG,KAAKN,EAAKO,wB,oBAGpC,WACE,OACE,8BACE,cAAC,EAAD,CAASJ,WAAYvB,KAAKf,MAAMsC,mB,GAnBtBnB,IAAMC,WCOTuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.03e296a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Tasks.css'\r\nimport Buttons from '../Buttons/Buttons'\r\n\r\nclass Tasks extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\ttasks: props.tasks,\r\n\t\t\ttask: 0,\r\n\t\t\ttotalScores: 0\r\n\t\t}\r\n\t}\r\n\r\n\tchangeQuestionForWrong = () => {\r\n\t\tthis.setState({\r\n\t\t\ttask: this.state.task + 1\r\n\t\t})\r\n\t}\r\n\r\n\tchangeQuestionForCorrect = () => {\r\n\t\tthis.setState({\r\n\t\t\ttask: this.state.task + 1,\r\n\t\t\ttotalScores: this.state.totalScores + 5\r\n\t\t})\r\n\t}\r\n\r\n\trestartQuiz = () => {\r\n\t\tthis.setState({task: 0, totalScores: 0})\r\n\t}\r\n\r\n\tshuffleFourAnswer = () => {\r\n\t\tconst { tasks, task } = this.state\r\n\t\tlet num = Math.floor(Math.random() * 4)\r\n\t\tif (num == 0 ) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='questionAndAnswers'>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForCorrect}>{tasks[task].correct_answer}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[0]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[1]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[2]}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else if(num == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='questionAndAnswers'>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[0]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForCorrect}>{tasks[task].correct_answer}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[1]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[2]}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else if(num == 2) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='questionAndAnswers'>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[0]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[1]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForCorrect}>{tasks[task].correct_answer}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[2]}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else if(num == 3) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='questionAndAnswers'>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[0]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[1]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[2]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForCorrect}>{tasks[task].correct_answer}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div><h1>function \"shuffleFourAnswer\" error ಥ_ಥ</h1></div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tshuffleTwoAnswer = () => {\r\n\t\tconst { tasks, task } = this.state\r\n\t\tlet num = Math.floor(Math.random() * 2)\r\n\t\tif(num == 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='questionAndAnswers'>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForCorrect}>{tasks[task].correct_answer}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[0]}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else if(num == 1) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='questionAndAnswers'>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForWrong}>{tasks[task].incorrect_answers[0]}</button>\r\n\t\t\t\t\t<button onClick={this.changeQuestionForCorrect}>{tasks[task].correct_answer}</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div><h1>function \"shuffleTwoAnswer\" error ಥ_ಥ</h1></div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { tasks, task } = this.state\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='tc'>YOUR TOTAL SCORES ARE...</h1>\r\n\t\t\t{\r\n\t\t\t\tthis.state.task < this.props.tasks.length\r\n\t\t\t\t? \r\n\t\t\t\t<div className='questionAndAnswers ma2'>\r\n\t\t\t\t\t<div className='question'><h4 className='tc'>{tasks[task].question}</h4></div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttasks[task].incorrect_answers.length == 1 \r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\tthis.shuffleTwoAnswer()\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tthis.shuffleFourAnswer()\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t: \r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='tc'>{`${this.state.totalScores}`}</h1>\r\n\t\t\t\t\t<button onClick={this.props.getQuiz} className='button'>new quiz</button>\r\n\t\t\t\t\t<button onClick={this.restartQuiz} className='button'>reset current quiz</button>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n} \r\n\r\n\r\nexport default Tasks","import React from 'react'\r\n\r\nclass Type extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='tc'>please select category and difficulty</h1>\r\n\t\t\t\t<h3>\"A winner is a dreamer who never gives up\"</h3>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Type","import React from 'react'\r\nimport './Buttons.css'\r\nimport Tasks from '../Tasks/Tasks.js'\r\nimport Type from '../Type/Type'\r\n\r\nclass Buttons extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tcategories: props.categories,\r\n\t\t\ttrivia_category: '',\r\n\t\t\ttrivia_difficulty: '',\r\n\t\t\ttrivia_amount: 10,\r\n\t\t\ttasks: [],\r\n\t\t\ttriger: false\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    getQuiz = () => {\r\n    \tfetch(`https://opentdb.com/api.php?amount=${this.state.trivia_amount}&category=${this.state.trivia_category}&difficulty=${this.state.trivia_difficulty}`)\r\n    \t.then(response => response.json())\r\n    \t.then(data => {\r\n    \t\tthis.setState({\r\n    \t\t\ttasks: data.results,\r\n            \ttriger: !this.state.triger\r\n        \t})\r\n    \t})\r\n    \t\r\n    }\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\tthis.state.triger \r\n\r\n\t\t\t? \r\n\r\n\t\t\t<Tasks tasks={this.state.tasks} getQuiz={this.getQuiz} /> \r\n\r\n\t\t\t:\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<Type />\r\n\t\t\t\t<div className='allButtons tc'>\r\n\t\t\t\t\t<select value={this.state.trivia_category} name=\"trivia_category\" className=\"button\" onChange={this.handleChange}>>\r\n\t\t\t\t\t\t<option value=\"any\">Select Category</option>\r\n\t\t\t\t\t\t<option value=\"9\">General Knowledge</option><option value=\"10\">Entertainment: Books</option>\r\n\t\t\t\t\t\t<option value=\"11\">Entertainment: Film</option><option value=\"12\">Entertainment: Music</option>\r\n\t\t\t\t\t\t<option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\r\n\t\t\t\t\t\t<option value=\"14\">Entertainment: Television</option>\r\n\t\t\t\t\t\t<option value=\"15\">Entertainment: Video Games</option>\r\n\t\t\t\t\t\t<option value=\"16\">Entertainment: Board Games</option>\r\n\t\t\t\t\t\t<option value=\"17\">Science &amp; Nature</option>\r\n\t\t\t\t\t\t<option value=\"18\">Science: Computers</option>\r\n\t\t\t\t\t\t<option value=\"19\">Science: Mathematics</option>\r\n\t\t\t\t\t\t<option value=\"20\">Mythology</option>\r\n\t\t\t\t\t\t<option value=\"21\">Sports</option>\r\n\t\t\t\t\t\t<option value=\"22\">Geography</option>\r\n\t\t\t\t\t\t<option value=\"23\">History</option>\r\n\t\t\t\t\t\t<option value=\"24\">Politics</option>\r\n\t\t\t\t\t\t<option value=\"25\">Art</option>\r\n\t\t\t\t\t\t<option value=\"26\">Celebrities</option>\r\n\t\t\t\t\t\t<option value=\"27\">Animals</option>\r\n\t\t\t\t\t\t<option value=\"28\">Vehicles</option>\r\n\t\t\t\t\t\t<option value=\"29\">Entertainment: Comics</option>\r\n\t\t\t\t\t\t<option value=\"30\">Science: Gadgets</option>\r\n\t\t\t\t\t\t<option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\r\n\t\t\t\t\t\t<option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\t\t\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<select value={this.state.trivia_difficulty} name=\"trivia_difficulty\" className=\"button\" onChange={this.handleChange}>>\r\n\t\t\t\t\t\t<option value=\"any\">Select Difficulty</option>\r\n\t\t\t\t\t\t<option value=\"easy\">Easy</option>\r\n\t\t\t\t\t\t<option value=\"medium\">Medium</option>\r\n\t\t\t\t\t\t<option value=\"hard\">Hard</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<button className=\"button\" onClick={this.getQuiz}>Start</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Buttons","import React from 'react'\nimport Buttons from './components/Buttons/Buttons'\n\n\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      categories: []\n    }\n  }\n\n\n  componentDidMount(){\n    fetch('https://opentdb.com/api_category.php')\n    .then(response => response.json())\n    .then(data => {\n      this.state.categories.push(data.trivia_categories)\n    })\n  }\n  render() {\n    return(\n      <div>\n        <Buttons categories={this.state.categories}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}